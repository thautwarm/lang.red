expression[
    definition[
        declaration[
            symbol[
                "f"
            ]
        ]
        "="
        expression[
            dualOperation[
                unaryOperation[
                    atomExpr[
                        lambdef[
                            declaration[
                                symbol[
                                    "x"
                                ]
                                ":"
                                typedef[
                                    typedef[
                                        symbol[
                                            "int"
                                        ]
                                    ]
                                    "->"
                                    typedef[
                                        symbol[
                                            "int"
                                        ]
                                    ]
                                ]
                            ]
                            "=>"
                            expression[
                                body[
                                    "{"
                                    expression[
                                        guard[
                                            branch[
                                                "when"
                                                expression[
                                                    dualOperation[
                                                        unaryOperation[
                                                            atomExpr[
                                                                atom[
                                                                    symbol[
                                                                        "x"
                                                                    ]
                                                                ]
                                                                trailer[
                                                                    "("
                                                                    expression[
                                                                        dualOperation[
                                                                            unaryOperation[
                                                                                atomExpr[
                                                                                    atom[
                                                                                        decimal[
                                                                                            "2"
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    ")"
                                                                ]
                                                            ]
                                                        ]
                                                        dualOperator[
                                                            "=="
                                                        ]
                                                        unaryOperation[
                                                            atomExpr[
                                                                atom[
                                                                    decimal[
                                                                        "2"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                                "then"
                                                expression[
                                                    dualOperation[
                                                        unaryOperation[
                                                            atomExpr[
                                                                atom[
                                                                    const[
                                                                        "true"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                            endOfBranch[
                                                "otherwise"
                                                "then"
                                                expression[
                                                    dualOperation[
                                                        unaryOperation[
                                                            atomExpr[
                                                                atom[
                                                                    const[
                                                                        "true"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    "}"
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
]